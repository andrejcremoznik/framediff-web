$button_border_radius: 5px !default;
$button_default_tx: (
  dark: #fff,
  light: #000
) !default;
$button_default_bg: (
  dark: lighten(#222, 25%),
  light: darken(#eee, 25%)
) !default;
$button_primary_tx: #fff !default;
$button_primary_bg: #307bb4 !default;
$button_shadow_color: (
  dark: rgba(#000, 0.5),
  light: rgba(#000, 0.25)
) !default;
$button_shadow: (
  dark: 0 1px 4px map_get($button_shadow_color, dark),
  light: 0 1px 4px map_get($button_shadow_color, light)
) !default;
$button_focus_glow: 0 0 1px 1px #f0f !default;

button.button,
input.button { -webkit-appearance: button; }
button.button::-moz-focus-inner,
input.button::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

.button {
  box-sizing: border-box;
  display: inline-block;
  margin: 0;
  padding: 0.75em 1.5em;
  border: 0;
  border-radius: $button_border_radius;
  box-shadow: map_get($button_shadow, dark);
  background-image: linear-gradient(to bottom, rgba(#000, 0), rgba(#000, 0.2));
  transition: all 150ms ease;
  font-family: inherit;
  font-size: 1em;
  font-weight: bold;
  font-style: normal;
  line-height: 1;
  vertical-align: middle;
  text-decoration: none;
  text-transform: none;
  text-shadow: none;
  white-space: nowrap;
  cursor: pointer;
  &:focus {
    outline: 0;
    box-shadow: $button_focus_glow;
  }
  .light & { box-shadow: map_get($button_shadow, light); }
}

.button[disabled],
.button--disabled {
  pointer-events: none;
  opacity: .5;
}
.button[data-state="active"]:focus { box-shadow: none !important; }

// Sizes
.button--l { font-size: 1.25em; }

.button--s { font-size: .75em; }

.button--block {
  display: block;
  padding-left: 5px;
  padding-right: 5px;
  text-align: center;
}
button.button--block,
input.button--block { width: 100%; }

// Colors
.button--default,
.button--default:visited,
.button--default:hover,
.button--default[data-state="active"] { color: map_get($button_default_tx, dark); }
.button--default {
  background-color: map_get($button_default_bg, dark);
  text-shadow: 0 1px 1px darken(map_get($button_default_bg, dark), 25%);
}
.button--default:hover { background-color: darken(map_get($button_default_bg, dark), 10%); }
.button--default[data-state="active"] { background-color: darken(map_get($button_default_bg, dark), 15%); }
.light {
  .button--default,
  .button--default:visited,
  .button--default:hover,
  .button--default[data-state="active"] { color: map_get($button_default_tx, light); }
  .button--default {
    background-color: map_get($button_default_bg, light);
    text-shadow: 0 1px 1px darken(map_get($button_default_bg, light), 25%);
  }
  .button--default:hover { background-color: darken(map_get($button_default_bg, light), 10%); }
  .button--default[data-state="active"] { background-color: darken(map_get($button_default_bg, light), 15%); }
}

.button--primary,
.button--primary:visited,
.button--primary:hover,
.button--primary[data-state="active"] { color: $button_primary_tx; }
.button--primary {
  background-color: $button_primary_bg;
  text-shadow: 0 1px 1px darken($button_primary_bg, 25%);
}
.button--primary:hover { background-color: darken($button_primary_bg, 10%); }
.button--primary[data-state="active"] { background-color: darken($button_primary_bg, 15%); }

// Mods
.button--plain {
  padding: 0;
  border-radius: 0;
  box-shadow: none;
  line-height: inherit;
  font-weight: inherit;
  text-shadow: none;
  color: inherit;
  background-color: transparent;
  background-image: none;
  -webkit-appearance: none;
  &:hover { background-color: transparent !important; }
  &.button--primary {
    color: $button_primary_bg;
    background-color: transparent;
    &:hover { color: darken($button_primary_bg, 10%); }
  }
}

.button--symbol {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 2.5em; // 0.75em top and bot + 1em line
  padding-top: 0;
  padding-bottom: 0;
  > svg {
    height: 1.5em;
    filter: drop-shadow(0 1px 1px darken(map_get($button_default_bg, dark), 25%));
  }
  &.button--primary > svg { filter: drop-shadow(0 1px 1px darken($button_primary_bg, 25%)); }
  &.button--plain > svg { filter: none; }
}

.button-group {
  display: flex;
  border-radius: $button_border_radius;
  box-shadow: map_get($button_shadow, dark);
  overflow: hidden;
  .light & { box-shadow: map_get($button_shadow, light); }
  > .button {
    flex: 1 1 auto;
    border-radius: 0;
    box-shadow: none;
    border-left: 1px solid rgba(#000, 0.25);
    &:first-child { border-left: 0; }
  }
}

// Specia focus styles
.button-group > .button,
.button--plain {
  &:focus { box-shadow: #{$button_focus_glow} inset; }
}
